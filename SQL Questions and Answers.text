Certainly! Here are 30 SQL query questions along with their solutions:

### 1. **Retrieve all columns from a table named `Employees`.**

```sql
SELECT * FROM Employees;
```

### 2. **Retrieve only the `FirstName` and `LastName` columns from `Employees`.**

```sql
SELECT FirstName, LastName FROM Employees;
```

### 3. **Find employees who have a salary greater than 50,000.**

```sql
SELECT * FROM Employees WHERE Salary > 50000;
```

### 4. **Retrieve employees with a `LastName` starting with 'S'.**

```sql
SELECT * FROM Employees WHERE LastName LIKE 'S%';
```

### 5. **Find the total number of employees in the `Employees` table.**

```sql
SELECT COUNT(*) AS TotalEmployees FROM Employees;
```

### 6. **Retrieve the highest salary from the `Employees` table.**

```sql
SELECT MAX(Salary) AS HighestSalary FROM Employees;
```

### 7. **Find the average salary of employees.**

```sql
SELECT AVG(Salary) AS AverageSalary FROM Employees;
```

### 8. **Retrieve the names of employees who work in department 5.**

```sql
SELECT FirstName, LastName FROM Employees WHERE DepartmentID = 5;
```

### 9. **List employees sorted by their `LastName` in ascending order.**

```sql
SELECT * FROM Employees ORDER BY LastName ASC;
```

### 10. **Retrieve the names of employees who have a salary between 30,000 and 50,000.**

```sql
SELECT FirstName, LastName FROM Employees WHERE Salary BETWEEN 30000 AND 50000;
```

### 11. **Find employees who do not have a manager.**

```sql
SELECT * FROM Employees WHERE ManagerID IS NULL;
```

### 12. **Count the number of employees in each department.**

```sql
SELECT DepartmentID, COUNT(*) AS NumberOfEmployees FROM Employees GROUP BY DepartmentID;
```

### 13. **Find the employee with the lowest salary.**

```sql
SELECT * FROM Employees WHERE Salary = (SELECT MIN(Salary) FROM Employees);
```

### 14. **Retrieve the names of employees who were hired in 2023.**

```sql
SELECT FirstName, LastName FROM Employees WHERE YEAR(HireDate) = 2023;
```

### 15. **Update the salary of employees in department 10 to 55,000.**

```sql
UPDATE Employees SET Salary = 55000 WHERE DepartmentID = 10;
```

### 16. **Delete employees who have not been assigned a department.**

```sql
DELETE FROM Employees WHERE DepartmentID IS NULL;
```

### 17. **Retrieve the top 5 highest-paid employees.**

```sql
SELECT * FROM Employees ORDER BY Salary DESC LIMIT 5;
```

### 18. **Find the number of employees with salaries below the average salary.**

```sql
SELECT COUNT(*) AS BelowAverageSalary FROM Employees WHERE Salary < (SELECT AVG(Salary) FROM Employees);
```

### 19. **List departments and the total salary of employees in each department.**

```sql
SELECT DepartmentID, SUM(Salary) AS TotalSalary FROM Employees GROUP BY DepartmentID;
```

### 20. **Retrieve employees whose `FirstName` is either 'John' or 'Jane'.**

```sql
SELECT * FROM Employees WHERE FirstName IN ('John', 'Jane');
```

### 21. **Find employees who were hired in the last 6 months.**

```sql
SELECT * FROM Employees WHERE HireDate >= DATEADD(MONTH, -6, GETDATE());
```

### 22. **Retrieve employees who have a name ending with 'son'.**

```sql
SELECT * FROM Employees WHERE LastName LIKE '%son';
```

### 23. **List all employees and their managers.**

```sql
SELECT E.FirstName AS EmployeeName, M.FirstName AS ManagerName
FROM Employees E
LEFT JOIN Employees M ON E.ManagerID = M.EmployeeID;
```

### 24. **Count the number of employees in each department and order by count.**

```sql
SELECT DepartmentID, COUNT(*) AS NumberOfEmployees FROM Employees GROUP BY DepartmentID ORDER BY NumberOfEmployees DESC;
```

### 25. **Retrieve the second highest salary from the `Employees` table.**

```sql
SELECT MAX(Salary) AS SecondHighestSalary
FROM Employees
WHERE Salary < (SELECT MAX(Salary) FROM Employees);
```

### 26. **Find the average salary of employees in each department.**

```sql
SELECT DepartmentID, AVG(Salary) AS AverageSalary FROM Employees GROUP BY DepartmentID;
```

### 27. **Retrieve employees who have 'Manager' in their job title.**

```sql
SELECT * FROM Employees WHERE JobTitle LIKE '%Manager%';
```

### 28. **List the departments that have more than 10 employees.**

```sql
SELECT DepartmentID FROM Employees GROUP BY DepartmentID HAVING COUNT(*) > 10;
```

### 29. **Update the department ID of employees from department 5 to department 6.**

```sql
UPDATE Employees SET DepartmentID = 6 WHERE DepartmentID = 5;
```

### 30. **Retrieve all employees who have the same job title as 'Software Engineer'.**

```sql
SELECT * FROM Employees WHERE JobTitle = (SELECT JobTitle FROM Employees WHERE JobTitle = 'Software Engineer');
```

These queries cover a range of SQL functionalities, from basic SELECT statements to more advanced aggregation and subqueries.
